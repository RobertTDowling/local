.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.31)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "histo 3"
.TH histo 3 "2016-01-10" "perl v5.22.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
histo \- perl library for simple histogram statistics
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& use histo;
\&
\& $o = new histo;
\& $o\->add (1);
\& $o\->add (2);
\& $o\->add (3);
\& print "N=",$o\->N, "\en";
\& print "min=",$o\->min, "\en";
\& print "max=",$o\->max, "\en";
\& print "buckets of 5:", join(\*(Aq,\*(Aq $o\->buckets(5)), "\en";
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBhisto\fR library calculates simple histogram statistics.
.PP
The \fBhisto\fR library is even less of a drop-in replacement for the
\&\fBstats\fR library than \fBstats34\fR is, because it has the overhead of
maintaining the entire set of data in order to perform the histogram
bucket computations.  But it is worth looking at \fBman stats\fR to see
where this came from.
.ie n .IP "$h = new histo" 4
.el .IP "\f(CW$h\fR = new histo" 4
.IX Item "$h = new histo"
Construct a new \fBhisto\fR object.  It contains all the information
necessary to compute histogram statistics on one set of data.  If you
want to analyze multiple sets of data, create multiple objects.
.ie n .IP "$h\->add (x)" 4
.el .IP "\f(CW$h\fR\->add (x)" 4
.IX Item "$h->add (x)"
Add value \fBx\fR to the set.  This will increase \fBN\fR by 1
.ie n .IP "$h\->N" 4
.el .IP "\f(CW$h\fR\->N" 4
.IX Item "$h->N"
Return the number of items in the set.  When constructed, the set
contains no values.
.ie n .IP "$h\->min ()" 4
.el .IP "\f(CW$h\fR\->min ()" 4
.IX Item "$h->min ()"
.PD 0
.ie n .IP "$h\->max ()" 4
.el .IP "\f(CW$h\fR\->max ()" 4
.IX Item "$h->max ()"
.PD
Return the extreme values of the set, or \*(L"?\*(R" if the set is empty
.ie n .IP "$h\->mean ()" 4
.el .IP "\f(CW$h\fR\->mean ()" 4
.IX Item "$h->mean ()"
Return the \fBmean\fR value of the set, or \*(L"?\*(R" if the set is empty
.ie n .IP "$h\->mode (w)" 4
.el .IP "\f(CW$h\fR\->mode (w)" 4
.IX Item "$h->mode (w)"
Return the \fBmode\fR of the set, value in the set which appears the most
often, or one of the values if several are tied.
.ie n .IP "$h\->modeN (w)" 4
.el .IP "\f(CW$h\fR\->modeN (w)" 4
.IX Item "$h->modeN (w)"
Return the count of the elements that are the \fBmode\fR of the set.
.ie n .IP "$h\->median ()" 4
.el .IP "\f(CW$h\fR\->median ()" 4
.IX Item "$h->median ()"
Return the \*(L"center value\*(R" of the sorted set.  By definition, the
\&\fBmedian\fR of a set with a even number of elements is the average of
the two center-most elements.  For sets with an odd number of elements,
the \fBmedian\fR is always an element of the set, unlike \fBmean\fR
.ie n .IP "$h\->median_pct (p)" 4
.el .IP "\f(CW$h\fR\->median_pct (p)" 4
.IX Item "$h->median_pct (p)"
Return the value of \fBq\fR'th element, where \fBq\fR=\fBfloor\fR(\fBN\fR*\fBp\fR)
and \fBp\fR is a number in the range [0..1).
.Sp
\&\fBMedian\fR = \fBmedian_pct\fR (0.5) for a set with a odd number of
elements.  (Hopefully!)
.ie n .IP "($first, $last) = $h\->percentile (target)" 4
.el .IP "($first, \f(CW$last\fR) = \f(CW$h\fR\->percentile (target)" 4
.IX Item "($first, $last) = $h->percentile (target)"
Return the positions (as a percent) in the sorted set of values of the
\&\fBfirst\fR and \fBlast\fR values in the set that are equal to the \fBtarget\fR
value.
.ie n .IP "@b = $h\->buckets (w)" 4
.el .IP "\f(CW@b\fR = \f(CW$h\fR\->buckets (w)" 4
.IX Item "@b = $h->buckets (w)"
Return a list \fB\f(CB@b\fB\fR of buckets of width \fBw\fR that form a histogram.
For example, if \fBw\fR=5, then \fB\f(CB$b\fB[0]\fR will have the count of values in
the set that are in the range 0..4, and \fB\f(CB$b\fB[1]\fR will have the count
for 5..9, and so on.
.ie n .IP "$h\->show_buckets (w)" 4
.el .IP "\f(CW$h\fR\->show_buckets (w)" 4
.IX Item "$h->show_buckets (w)"
Compute \fBbuckets(w)\fR and print out the histogram as a table.
.ie n .IP "$h\->show_nz_buckets (w)" 4
.el .IP "\f(CW$h\fR\->show_nz_buckets (w)" 4
.IX Item "$h->show_nz_buckets (w)"
Compute \fBbuckets(w)\fR and print out the histogram as a table, showing
only buckets with non-zero counts.
.ie n .IP "$h\->show_bucket_range (low, high, w)" 4
.el .IP "\f(CW$h\fR\->show_bucket_range (low, high, w)" 4
.IX Item "$h->show_bucket_range (low, high, w)"
Compute \fBbuckets(w)\fR and print out the histogram as a table, showing
only buckets from \fBlow\fR to \fBhigh\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIstats\fR\|(3), \fIstats34\fR\|(3), \fIperm\fR\|(3), \fIsets\fR\|(3), \fInormaldist\fR\|(3), \fIStats\fR\|(3), \fIHisto\fR\|(3)
.SH "AUTHOR"
.IX Header "AUTHOR"
Robert Dowling <\fIRPNCalcN@gmail.com\fR>.
